import{VectorFields}from"/applets/vector-fields/scripts/class.min.js";import{RaymarchApplet}from"/scripts/applets/raymarchApplet.min.js";class HairyBall extends RaymarchApplet{vectorFieldAppletResolution;vectorFieldDilation;vectorFieldApplet;constructor({canvas,vectorFieldGeneratingCode="(x, y)",vectorFieldAppletResolution=500,vectorFieldDilation=1}){super({canvas:canvas,resolution:1e3,distanceEstimatorGlsl:`
			return length(pos) - 1.0;
		`,getColorGlsl:`
			// Convert to spherical coordinates.
			vec3 normalizedPos = normalize(pos);
			float phi = acos(normalizedPos.z);
			float theta = atan(normalizedPos.y, normalizedPos.x) + 3.14159265;

			return texture2D(
				uTexture,
				vec2(theta / 6.28318531, phi / 3.14159265)
					* (float(resolution) - 1.0) / float(resolution) 
			).xyz;
		`,addGlsl:`
			uniform sampler2D uTexture;
		`,theta:Math.PI,phi:Math.PI/2,lockedOnOrigin:!0,cameraPos:[2.25,0,0],lightBrightness:0,ambientLight:1.1,minEpsilon:.0025,useBloom:!1}),this.vectorFieldAppletResolution=vectorFieldAppletResolution,this.vectorFieldDilation=vectorFieldDilation;var e=this.createHiddenCanvas();this.vectorFieldApplet=new VectorFields({canvas:e,loopEdges:!0}),this.vectorFieldApplet.drawFrameCallback=()=>{this.wilson.setTexture({id:"draw",data:this.vectorFieldApplet.wilson.readPixels()}),this.needNewFrame=!0},this.runVectorField(vectorFieldGeneratingCode),this.onResizeCanvas(),this.wilson.gl.texParameteri(this.wilson.gl.TEXTURE_2D,this.wilson.gl.TEXTURE_MAG_FILTER,this.wilson.gl.LINEAR),this.wilson.gl.texParameteri(this.wilson.gl.TEXTURE_2D,this.wilson.gl.TEXTURE_MIN_FILTER,this.wilson.gl.LINEAR),this.wilson.onSwitchFullscreen=this.switchFullscreen.bind(this),this.wilson.beforeSwitchFullscreen=this.beforeSwitchFullscreen.bind(this),this.wilsonForFullscreen=this.wilson}runVectorField(generatingCode){this.vectorFieldApplet.run({generatingCode:generatingCode,resolution:this.vectorFieldAppletResolution,maxParticles:1e4,dt:.003,lifetime:150,zoomLevel:.6515,particleDilation:this.vectorFieldDilation,appendGlsl:`
				vec3 c = vec3(
					cos(x) * cos(y * 0.5),
					sin(x) * cos(y * 0.5),
					sin(y * 0.5)
				);

				x = c.x;
				y = c.y;
				float z = c.z;
			`}),this.wilson.createFramebufferTexturePair({id:"draw",width:this.vectorFieldAppletResolution,height:this.vectorFieldAppletResolution,textureType:"unsignedByte"}),this.wilson.useTexture("draw"),this.wilson.useFramebuffer(null)}distanceEstimator(){return.55}switchFullscreen(){this.resume()}async beforeSwitchFullscreen(){this.pause(),await new Promise(resolve=>setTimeout(resolve,33))}}export{HairyBall};