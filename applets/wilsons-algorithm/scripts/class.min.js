import{AnimationFrameApplet}from"/scripts/applets/animationFrameApplet.min.js";import{addTemporaryWorker}from"/scripts/src/main.min.js";import{WilsonCPU}from"/scripts/wilson.min.js";class WilsonsAlgorithm extends AnimationFrameApplet{webWorker;maximumSpeed=!1;gridSize;resolution=1e3;imageData;pixels=[];constructor({canvas}){super(canvas);var e={canvasWidth:this.resolution,fullscreenOptions:{onSwitch:this.switchFullscreen.bind(this),beforeSwitch:this.beforeSwitchFullscreen.bind(this),useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"}};this.wilson=new WilsonCPU(canvas,e),this.canvas.style.imageRendering="pixelated"}run({gridSize,maximumSpeed,noBorders,reverseGenerateSkeleton=!1}){let i;this.gridSize=gridSize,this.resolution=noBorders?gridSize:2*gridSize+1,this.maximumSpeed=maximumSpeed,this.wilson.resizeCanvas({width:this.resolution}),this.imageData=new Uint8ClampedArray(this.resolution*this.resolution*4);for(let s=0;s<this.resolution*this.resolution;s++)this.imageData[4*s+3]=255;this.pixels=[],this.webWorker=addTemporaryWorker("/applets/wilsons-algorithm/scripts/worker.js"),this.webWorker.onmessage=e=>{clearTimeout(i),this.pixels.push(...e.data),this.needNewFrame=!0},reverseGenerateSkeleton||(i=setTimeout(()=>{this.run({gridSize:gridSize,maximumSpeed:maximumSpeed,noBorders:noBorders,reverseGenerateSkeleton:!0})},3e3)),this.webWorker.postMessage([gridSize,noBorders,reverseGenerateSkeleton]),this.resume()}drawFrame(){var i=this.maximumSpeed?this.pixels.length:Math.min(Math.ceil(this.gridSize*this.gridSize/200),this.pixels.length);if(0!==this.pixels.length){var s=[this.pixels[0][2][0],this.pixels[0][2][1],this.pixels[0][2][2]];255===s[0]&&255===s[1]&&255===s[2]||(this.maximumSpeed=!0);let e;for(e=0;e<i;e++){var t=this.pixels[e][0]*this.resolution+this.pixels[e][1];if(this.imageData[4*t]=this.pixels[e][2][0],this.imageData[4*t+1]=this.pixels[e][2][1],this.imageData[4*t+2]=this.pixels[e][2][2],this.pixels[e][2][0]!==s[0]||this.pixels[e][2][1]!==s[1]||this.pixels[e][2][2]!==s[2])break}this.pixels.splice(0,e),this.wilson.drawFrame(this.imageData),0!==this.pixels.length&&(this.needNewFrame=!0)}}switchFullscreen(){this.resume()}async beforeSwitchFullscreen(){this.animationPaused=!0,await new Promise(resolve=>setTimeout(resolve,33))}}export{WilsonsAlgorithm};