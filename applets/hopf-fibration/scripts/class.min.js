import anime from"/scripts/anime.min.js";import{tempShader}from"/scripts/applets/applet.min.js";import{magnitude}from"/scripts/applets/raymarchApplet.min.js";import{ThreeApplet}from"/scripts/applets/threeApplet.min.js";import*as THREE from"/scripts/three.js";import{WilsonGPU}from"/scripts/wilson.min.js";function hsvToRgb(h,s,v){function t(n){var t=(n+6*h)%6;return v-v*s*Math.max(0,Math.min(t,Math.min(4-t,1)))}return[255*t(5),255*t(3),255*t(1)]}class Fiber extends THREE.Curve{p;v;center;s3P;s3V;compression;constructor({p,v,center,s3P,s3V,compression}){super(),this.p=p,this.v=v,this.center=center,this.s3P=s3P,this.s3V=s3V,this.compression=compression}getPoint(t,optionalTarget=new THREE.Vector3){var s=Math.cos(2*Math.PI*t),e=Math.sin(2*Math.PI*t),i=s*this.p[0]+e*this.v[0]+this.center[0],r=s*this.p[1]+e*this.v[1]+this.center[1],n=s*this.p[2]+e*this.v[2]+this.center[2],o=s*this.s3P[3]+e*this.s3V[3],o=Math.acos(o)/(Math.PI*Math.sqrt(1-o*o)),a=o*(s*this.s3P[0]+e*this.s3V[0]),h=o*(s*this.s3P[1]+e*this.s3V[1]),o=o*(s*this.s3P[2]+e*this.s3V[2]),s=(1-this.compression)*i+this.compression*a,e=(1-this.compression)*r+this.compression*h,i=(1-this.compression)*n+this.compression*o;return optionalTarget.set(i,e,s)}}class HopfFibration extends ThreeApplet{theta=Math.PI/2;phi=Math.PI/2;worldSize=1.5;movingSpeed=.01;imageSize=1e3;compression=0;numLatitudes=3;numLongitudesPerLatitude=50;numLongitudesShown=37.5;fibers=[];needDownload=!1;constructor({canvas}){super({canvas:canvas,cameraPos:[0,-4,0]});var t={shader:tempShader,canvasWidth:this.imageSize,worldWidth:this.worldSize,worldHeight:this.worldSize,worldCenterX:this.theta,worldCenterY:this.phi,minWorldY:.001-this.worldSize/2,maxWorldY:Math.PI-.001+this.worldSize/2,onResizeCanvas:this.onResizeCanvas.bind(this),interactionOptions:{useForPanAndZoom:!0,disallowZooming:!0,onPanAndZoom:()=>this.needNewFrame=!0},fullscreenOptions:{fillScreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"}},t=(this.wilson=new WilsonGPU(canvas,t),this.initThree(),new THREE.PointLight(16777215,1,1e4)),t=(t.position.set(-750,-1e3,500),this.scene.add(t),new THREE.PointLight(16777215,.5,1e4));t.position.set(750,1e3,500),this.scene.add(t),this.toggleCompression(!0),this.resume()}createFiber(theta,phi){var t=[Math.sin(phi)*Math.cos(theta),Math.sin(phi)*Math.sin(theta),Math.cos(phi)],s=1/Math.sqrt(2*(t[2]+1)),e=[0,s*t[0],s*t[1],s*(1+t[2])],i=[e[0]/(1-e[3]),e[1]/(1-e[3]),e[2]/(1-e[3])],r=[-e[0]/(1+e[3]),-e[1]/(1+e[3]),-e[2]/(1+e[3])],r=[(i[0]+r[0])/2,(i[1]+r[1])/2,(i[2]+r[2])/2],n=Math.sqrt((i[0]-r[0])**2+(i[1]-r[1])**2+(i[2]-r[2])**2),s=[s*(1+t[2]),-s*t[1],s*t[0],0],t=[s[0]/(1-s[3]),s[1]/(1-s[3]),s[2]/(1-s[3])],i=[i[0]-r[0],i[1]-r[1],i[2]-r[2]],t=[t[0]-r[0],t[1]-r[1],t[2]-r[2]],o=(t[0]*i[0]+t[1]*i[1]+t[2]*i[2])/(i[0]*i[0]+i[1]*i[1]+i[2]*i[2]),t=[t[0]-o*i[0],t[1]-o*i[1],t[2]-o*i[2]],o=Math.sqrt(t[0]**2+t[1]**2+t[2]**2),n=[n/o*t[0],n/o*t[1],n/o*t[2]],o=new Fiber({p:i,v:n,center:r,s3P:e,s3V:s,compression:this.compression}),t=.05*(1-this.compression)+this.compression*(.115/Math.sqrt(this.numLatitudes*this.numLongitudesPerLatitude)),i=.2+.7*Math.abs((theta+Math.PI/2)%Math.PI-Math.PI/2)/(Math.PI/2),n=hsvToRgb(phi/Math.PI,i,1),r=new THREE.TubeGeometry(o,100,t,20,!1),e=new THREE.MeshStandardMaterial({color:new THREE.Color(n[0]/255,n[1]/255,n[2]/255)}),s=(e.transparent=!0,new THREE.Mesh(r,e));return this.scene.add(s),s}createAllFibers(){for(const t of this.fibers)t.geometry.dispose(),t.material.dispose(),this.scene.remove(t);this.fibers=[];var s=Math.floor((this.numLongitudesPerLatitude-this.numLongitudesShown)/2);for(let r=0;r<this.numLatitudes;r++){var e,i=(r+1)/(this.numLatitudes+1)*Math.PI;for(let t=0;t<this.numLongitudesPerLatitude;t++)t<s||t>=this.numLongitudesPerLatitude-s||(e=(t+.5)/this.numLongitudesPerLatitude*2*Math.PI,e=this.createFiber(e,i),this.fibers.push(e))}this.needNewFrame=!0}async toggleCompression(instant){const t={t:0},s=this.compression,e=0===this.compression?1:0;var i=Math.sqrt(this.cameraPos[0]**2+this.cameraPos[1]**2+this.cameraPos[2]**2),i=0===this.compression?1.32/i:4/i;const r=[...this.cameraPos],n=[this.cameraPos[0]*i,this.cameraPos[1]*i,this.cameraPos[2]*i];await anime({targets:t,t:1,duration:instant?0:750,easing:"easeOutQuad",update:()=>{this.compression=(1-t.t)*s+t.t*e,this.cameraPos=[(1-t.t)*r[0]+t.t*n[0],(1-t.t)*r[1]+t.t*n[1],(1-t.t)*r[2]+t.t*n[2]],this.distanceFromOrigin=magnitude(this.cameraPos),this.createAllFibers(),this.needNewFrame=!0},complete:()=>{this.compression=e,this.cameraPos=n,this.distanceFromOrigin=magnitude(this.cameraPos),this.createAllFibers(),this.needNewFrame=!0}}).finished}prepareFrame(timeElapsed){this.moveUpdate(timeElapsed)}drawFrame(){this.theta=this.lockedOnOrigin?this.wilson.worldCenterX:2*Math.PI-this.wilson.worldCenterX,this.phi=this.lockedOnOrigin?this.wilson.worldCenterY:Math.PI-this.wilson.worldCenterY,this.renderer.render(this.scene,this.camera),this.needDownload&&(this.needDownload=!1,this.wilson.canvas.toBlob(blob=>{var t=document.createElement("a");t.download="the-hopf-fibration.png",t.href=window.URL.createObjectURL(blob),t.click(),t.remove()}))}onResizeCanvas(){this.renderer.setSize(this.wilson.canvasWidth,this.wilson.canvasHeight,!1),this.camera.aspect=this.wilson.canvasWidth/this.wilson.canvasHeight,this.camera.updateProjectionMatrix(),this.wilson.resizeWorld({minWorldY:.001-this.wilson.worldHeight/2,maxWorldY:Math.PI-.001+this.wilson.worldHeight/2}),this.needNewFrame=!0}}export{HopfFibration};