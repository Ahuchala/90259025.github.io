import{AnimationFrameApplet}from"/scripts/applets/animationFrameApplet.min.js";import{WilsonGPU}from"/scripts/wilson.min.js";class JuliaSetMosaic extends AnimationFrameApplet{wilsonHidden;aspectRatio=1;numIterations=100;zoomLevel=0;pastBrightnessScales=[];c=[0,0];resolution=500;resolutionHidden=50;constructor({canvas}){super(canvas);var e={shader:`
			precision highp float;
			
			varying vec2 uv;
			
			uniform vec2 worldCenter;
			uniform vec2 worldSize;
			
			uniform float brightnessScale;
			uniform float setDensity;
			
			
			
			void main(void)
			{
				vec2 z = uv * worldSize * 0.5 + worldCenter;
				
				vec3 color = normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));
				float brightness = exp(-length(z));
				
				
				
				vec2 c = floor(z * setDensity) / setDensity;
				z = (mod(z, 1.0 / setDensity) * setDensity - vec2(.5, .5)) * 3.0;
				
				for (int iteration = 0; iteration < 100; iteration++)
				{
					if (length(z) >= 1000.0)
					{
						gl_FragColor = vec4(brightness / brightnessScale * color, 1.0);
						return;
					}
					
					z = vec2(z.x * z.x - z.y * z.y + c.x, 2.0 * z.x * z.y + c.y);
					
					brightness += exp(-length(z));
				}

				gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
			}
		`,uniforms:{worldCenter:[-.75,0],worldSize:[4,4],brightnessScale:10,setDensity:10},canvasWidth:this.resolution,worldWidth:4,worldCenterX:-.75,worldCenterY:0,minWorldX:-3.75,maxWorldX:2.25,minWorldY:-3,maxWorldY:3,minWorldWidth:1e-5,minWorldHeight:1e-5,onResizeCanvas:()=>this.needNewFrame=!0,interactionOptions:{useForPanAndZoom:!0,onPanAndZoom:()=>this.needNewFrame=!0},fullscreenOptions:{onSwitch:this.switchFullscreen.bind(this),beforeSwitch:this.beforeSwitchFullscreen.bind(this),fillScreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"}},i=this.createHiddenCanvas();this.wilsonHidden=new WilsonGPU(i,{...e,canvasWidth:this.resolutionHidden}),this.wilson=new WilsonGPU(canvas,e),this.resume()}drawFrame(){var e=3-Math.log2(this.wilson.worldWidth),i=(this.numIterations=Math.ceil(200+40*e),this.wilsonHidden.setUniforms({worldSize:[this.wilson.worldWidth,this.wilson.worldHeight],worldCenter:[this.wilson.worldCenterX,this.wilson.worldCenterY],brightnessScale:20+e}),this.wilsonHidden.drawFrame(),this.wilsonHidden.readPixels()),s=new Array(this.resolutionHidden*this.resolutionHidden);for(let n=0;n<this.resolutionHidden*this.resolutionHidden;n++)s[n]=i[4*n]+i[4*n+1]+i[4*n+2];s.sort((a,b)=>a-b);e=(s[Math.floor(this.resolutionHidden*this.resolutionHidden*.96)]+s[Math.floor(this.resolutionHidden*this.resolutionHidden*.98)])/25+2*e;this.pastBrightnessScales.push(e),10<this.pastBrightnessScales.length&&this.pastBrightnessScales.shift();let t=0;for(let o=0;o<this.pastBrightnessScales.length;o++)t+=this.pastBrightnessScales[o];t=Math.max(t/this.pastBrightnessScales.length,.5),this.wilson.setUniforms({worldSize:[this.wilson.worldWidth,this.wilson.worldHeight],worldCenter:[this.wilson.worldCenterX,this.wilson.worldCenterY],brightnessScale:t}),this.wilson.drawFrame()}switchFullscreen(){this.resume()}async beforeSwitchFullscreen(){this.animationPaused=!0,await new Promise(resolve=>setTimeout(resolve,33))}}export{JuliaSetMosaic};