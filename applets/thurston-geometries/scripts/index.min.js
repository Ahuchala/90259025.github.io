import{showPage}from"../../../scripts/src/loadPage.min.js";import{ThurstonGeometries,rotateVectors}from"./class.min.js";import{E3Rooms}from"./geometries/e3.min.js";import{H2xERooms}from"./geometries/h2xe.min.js";import{H3Rooms}from"./geometries/h3.min.js";import{NilRooms}from"./geometries/nil.min.js";import{E3S2Demo,S2xES2Demo}from"./geometries/s2.min.js";import{S2xERooms}from"./geometries/s2xe.min.js";import{S3Rooms}from"./geometries/s3.min.js";import{SL2RRooms}from"./geometries/sl2r.min.js";import{SolRooms}from"./geometries/sol.min.js";import{Button,ToggleButton}from"/scripts/src/buttons.min.js";import{Checkbox}from"/scripts/src/checkboxes.min.js";import{Dropdown}from"/scripts/src/dropdowns.min.js";import{equalizeAppletColumns}from"/scripts/src/layout.min.js";import{$,$$}from"/scripts/src/main.min.js";import{typesetMath}from"/scripts/src/math.min.js";import{siteSettings}from"/scripts/src/settings.min.js";import{Slider}from"/scripts/src/sliders.min.js";import{TextBox}from"/scripts/src/textBoxes.min.js";export default function(){const n=new ThurstonGeometries({canvas:$("#output-canvas")}),e=new TextBox({element:$("#resolution-input"),name:"Resolution",value:500,minValue:100,maxValue:1e3,onInput:function(){n.needNewFrame=!0,n.wilson.resizeCanvas({width:e.value*siteSettings.resolutionMultiplier})}}),a=new Slider({element:$("#wall-thickness-slider"),name:"Wall Thickness",value:0,min:0,max:1,onInput:d}),r=new Slider({element:$("#clip-distance-slider"),name:"Clip Distance",value:0,min:0,max:10,onInput:d}),t=new Slider({element:$("#fov-slider"),name:"FOV",value:100,min:80,max:120,snapPoints:[100],onInput:d}),o=new Checkbox({element:$("#antialiasing-checkbox"),name:"Antialiasing",onInput:function(){n.useAntialiasing=o.checked,n.run(n.geometryData,!1)}}),s=new ToggleButton({element:$("#switch-scene-button"),name0:"Switch to Spheres",name1:"Switch to Rooms",onClick0:instant=>setTimeout(()=>n.switchScene({duration:instant?20:500}),instant?100:0),onClick1:instant=>setTimeout(()=>n.switchScene({duration:instant?20:500}),instant?100:0)}),i=$("#demo-canvas"),m=$("#demo-canvas-container");let l;const c={s2:E3S2Demo,e3:E3Rooms,s3:S3Rooms,h3:H3Rooms,s2xe:S2xERooms,h2xe:H2xERooms,nil:NilRooms,sl2r:SL2RRooms,sol:SolRooms},p=new Dropdown({element:$("#geometries-dropdown"),name:"Geometries",options:{s2:"$S^2$",e3:"$\\mathbb{E}^3$",s3:"$S^3$",h3:"$\\mathbb{H}^3$",s2xe:"$S^2 \\times \\mathbb{E}$",h2xe:"$\\mathbb{H}^2 \\times \\mathbb{E}$",nil:"Nil",sl2r:"$\\widetilde{\\operatorname{SL}}(2, \\mathbb{R})$",sol:"Sol"},onInput:function(fromOnClickHandler){s.state&&fromOnClickHandler&&s.setState({newState:!1});u()}});function u(){var e,t=p.value||"s2",o="#fov-slider, #download-button",s=($$(`.info-text:not(#${t}-text)`).forEach(element=>element.style.display="none"),$$(`#${t}-text`).forEach(element=>element.style.display="block"),c[t]);s===E3S2Demo?(n,$(".sliders").style.display="none",$$(".text-buttons")[1].style.display="none",e=new E3S2Demo,m.style.display="",void 0===l?((l=new ThurstonGeometries({canvas:i})).allowFullscreenWithKeyboard=!1,$$(".WILSON_enter-fullscreen-button")[1].remove()):(l.animationPaused=!1,l.needNewFrame=!0,l.drawFrame()),e.handleMovingCallback=(movingAmount,timeElapsed)=>{l.handleMoving(movingAmount,timeElapsed),l.needNewFrame=!0},n.run(e),n.restrictCamera=!1,n.wilson.resizeWorld({centerX:3*Math.PI/4,centerY:Math.PI/4.5}),(e=new S2xES2Demo).drawFrameCallback=()=>{n.geometryData.cameraDotPos=[...l.geometryData.cameraPos];for(let t=0;t<n.geometryData.numRays;t++){var e=(t-Math.floor(n.geometryData.numRays/2))/n.geometryData.numRays*1.87;[n.geometryData.rayDirs[t],n.geometryData.testVecs[t]]=rotateVectors(l.geometryData.forwardVec,l.geometryData.rightVec,e),[n.geometryData.rayLengths,n.geometryData.rayColors]=l.geometryData.getRayData(n.geometryData.rayDirs)}n.needNewFrame=!0},l.run(e),l.wilson.resizeWorld({centerX:Math.PI/4}),m.style.display="",m.querySelector(".WILSON_applet-container").style.setProperty("margin-top","4px","important")):(n.restrictCamera=!0,e=new s,s=Array.from(e.uiElementsUsed?$$(o+","+e.uiElementsUsed):$$(o)).map(element=>element.parentNode),o=Array.from(e.uiElementsUsed?$$(`
					.slider-container > input:not(${o}, ${e.uiElementsUsed}),
					.text-button:not(.dropdown, ${o}, ${e.uiElementsUsed})
				`):$$(`
					.slider-container > input:not(${o}),
					.text-button:not(.dropdown, ${o})
				`)).map(element=>element.parentNode),s.forEach(element=>element.style.display=""),$(".sliders").style.display="",$$(".text-buttons")[1].style.display="sl2r"===t?"none":"",o.forEach(element=>element.style.display="none"),setTimeout(()=>equalizeAppletColumns(),0),m.style.display="none",l&&(l.animationPaused=!0),e.wallThicknessData&&(a.setBounds({min:e.wallThicknessData[1],max:e.wallThicknessData[2]}),a.setValue(e.wallThicknessData[0]),e.sliderValues.wallThickness=e.wallThicknessData[0]),e.maxClipDistance&&(r.setBounds({min:0,max:e.maxClipDistance}),r.setValue(Math.min(e.maxClipDistance,r.value)),e.sliderValues.clipDistance=parseFloat(r.value)),n.run(e))}function d(){n.geometryData.sliderValues.wallThickness=parseFloat(a.value),n.geometryData.sliderValues.clipDistance=parseFloat(r.value),n.fov=Math.tan(t.value/2*Math.PI/180),n.needNewFrame=!0}typesetMath(),$$(".slider-container").forEach(element=>element.style.display="none"),new Button({element:$("#download-button"),name:"Download",onClick:()=>n.downloadFrame("a-thurston-geometry.png")}),u(),showPage()}