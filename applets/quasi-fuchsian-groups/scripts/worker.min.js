"use strict";let resolution,maxDepth,maxPixelBrightness;const boxSize=4;let coefficients=[],brightness=[],x=0,y=0;function drawQuasiFuchsianGroup(){brightness=new Array(resolution*resolution);for(let t=0;t<brightness.length;t++)brightness[t]=0;for(let i=0;i<4;i++)searchStep(0,0,i,1);let e=0;for(let s=0;s<brightness.length;s++)e=Math.max(e,brightness[s]);for(let n=0;n<brightness.length;n++)brightness[n]=Math.pow(brightness[n]/e,.15);postMessage([brightness])}function searchStep(startX,startY,lastTransformationIndex,depth){if(depth!==maxDepth)for(let e=3;e<6;e++){x=startX,y=startY;var t=(lastTransformationIndex+e)%4,i=(applyTransformation(t),Math.floor((-y+boxSize/2)/boxSize*resolution)),s=Math.floor((x+boxSize/2)/boxSize*resolution);if(0<=i&&i<resolution&&0<=s&&s<resolution){if(brightness[resolution*i+s]===maxPixelBrightness)continue;brightness[resolution*i+s]++}searchStep(x,y,t,depth+1)}}function applyTransformation(index){var e=coefficients[index][0][0],t=coefficients[index][0][1],i=coefficients[index][1][0],s=coefficients[index][1][1],n=coefficients[index][2][0],o=coefficients[index][2][1],r=coefficients[index][3][0],a=coefficients[index][3][1],i=e*x-t*y+i,e=e*y+t*x+s,t=n*x-o*y+r,s=n*y+o*x+a,r=i*t+e*s,n=e*t-i*s,o=t*t+s*s;x=r/o,y=n/o}onmessage=e=>{resolution=e.data[0],maxDepth=e.data[1],maxPixelBrightness=e.data[2],coefficients=e.data[3],drawQuasiFuchsianGroup()};