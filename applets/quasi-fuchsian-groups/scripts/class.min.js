import{AnimationFrameApplet}from"/scripts/applets/animationFrameApplet.min.js";import{addTemporaryWorker,loadScript}from"/scripts/src/main.min.js";import{WilsonGPU}from"/scripts/wilson.min.js";const boxSize=4;class QuasiFuchsianGroups extends AnimationFrameApplet{resolutionSmall=500;resolutionLarge=1500;webWorker;coefficients=[[[0,0],[0,0],[0,0],[0,0]],[[0,0],[0,0],[0,0],[0,0]],[],[]];maxDepth=500;maxPixelBrightness=200;x=0;y=0;brightness;image;Complex;constructor({canvas}){super(canvas);var e={shaders:{trim:`
			precision highp float;
			precision highp sampler2D;
			
			varying vec2 uv;
			
			uniform sampler2D uTexture;
			
			uniform vec2 stepSize;
			
			
			
			void main(void)
			{
				//remove isolated pixels.
				vec2 center = (uv + vec2(1.0, 1.0)) / 2.0;
				
				float brightness =
					texture2D(uTexture, center + vec2(stepSize.x, 0.0)).z +
					texture2D(uTexture, center - vec2(stepSize.x, 0.0)).z +
					texture2D(uTexture, center + vec2(0.0, stepSize.y)).z +
					texture2D(uTexture, center - vec2(0.0, stepSize.y)).z +
					texture2D(uTexture, center + vec2(stepSize.x, stepSize.y)).z +
					texture2D(uTexture, center + vec2(stepSize.x, -stepSize.y)).z +
					texture2D(uTexture, center + vec2(-stepSize.x, stepSize.y)).z +
					texture2D(uTexture, center + vec2(-stepSize.x, -stepSize.y)).z;
				
				if (brightness < 0.1)
				{
					gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
					
					return;
				}
				
				
				gl_FragColor = vec4(0.0, 0.0, texture2D(uTexture, center).z, 1.0);
			}
		`,dilate:`
			precision highp float;
			precision highp sampler2D;
			
			varying vec2 uv;
			
			uniform sampler2D uTexture;
			
			uniform vec2 stepSize;
			
			
			
			void main(void)
			{
				//Dilate the pixels to make a thicker line.
				vec2 center = (uv + vec2(1.0, 1.0)) / 2.0;
				
				float brightness =
					max(max(max(texture2D(uTexture, center + vec2(stepSize.x, 0.0)).z,
					texture2D(uTexture, center - vec2(stepSize.x, 0.0)).z),
					max(texture2D(uTexture, center + vec2(0.0, stepSize.y)).z,
					texture2D(uTexture, center - vec2(0.0, stepSize.y)).z)),
					
					max(max(texture2D(uTexture, center + vec2(stepSize.x, stepSize.y)).z,
					texture2D(uTexture, center + vec2(stepSize.x, -stepSize.y)).z),
					max(texture2D(uTexture, center + vec2(-stepSize.x, stepSize.y)).z,
					texture2D(uTexture, center + vec2(-stepSize.x, -stepSize.y)).z)));
					
				brightness = max(brightness, texture2D(uTexture, center).z);
				
				gl_FragColor = vec4(0.0, 0.0, brightness, 1.0);
			}
		`,color:`
			precision highp float;
			precision highp sampler2D;
			
			varying vec2 uv;
			
			uniform sampler2D uTexture;

			uniform vec2 aspectRatio;
			
			void main(void)
			{
				//Dilate the pixels to make a thicker line.
				vec2 center = (uv + vec2(1.0, 1.0)) / 2.0;
				
				vec2 z = 3.0 * uv * aspectRatio;
				vec3 color = 1.5 * normalize(vec3(abs(z.x + z.y) / 2.0, abs(z.x) / 2.0, abs(z.y) / 2.0) + .1 / length(z) * vec3(1.0, 1.0, 1.0));
				
				gl_FragColor = vec4(color * texture2D(uTexture, center).z, 1.0);
			}
		`},uniforms:{trim:{stepSize:[1/this.resolutionSmall,1/this.resolutionSmall]},dilate:{stepSize:[1/this.resolutionSmall,1/this.resolutionSmall]},color:{aspectRatio:[1,1]}},canvasWidth:this.resolutionSmall,worldWidth:.5,worldHeight:4,worldCenterX:2,worldCenterY:0,onResizeCanvas:this.onResizeCanvas.bind(this),draggableOptions:{draggables:{ta:[2,0],tb:[2,0],tc:[2,-2]},callbacks:{grab:this.onGrabDraggable.bind(this),drag:this.onDragDraggable.bind(this),release:this.onReleaseDraggable.bind(this)}},fullscreenOptions:{fillScreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png"}};this.wilson=new WilsonGPU(canvas,e),loadScript("/scripts/complex.min.js").then(()=>{this.Complex=Complex,this.resume(),this.onResizeCanvas(),this.changeRecipe("grandma")})}grandmaCoefficients(p1=this.wilson.draggables.ta.location,p2=this.wilson.draggables.tb.location){var e=new this.Complex(p1[0],p1[1]),i=new this.Complex(p2[0],p2[1]),s=e.mul(i),t=e.mul(e).add(i.mul(i)),t=s.mul(s).sub(t.mul(4)),s=(0<t.arg()?s.sub(t.sqrt()):s.add(t.sqrt())).div(2),t=s.sub(2).mul(i).div(i.mul(s).sub(e.mul(2)).add(s.mul(new this.Complex([0,2])))),n=e.div(2),a=e.mul(s).sub(i.mul(2)).add(new this.Complex([0,4])).div(s.mul(2).add(4).mul(t)),e=e.mul(s).sub(i.mul(2)).sub(new this.Complex([0,4])).mul(t).div(s.mul(2).sub(4)),t=i.sub(new this.Complex([0,2])).div(2),s=i.div(2),i=i.add(new this.Complex([0,2])).div(2);this.coefficients[0][0][0]=n.re,this.coefficients[0][0][1]=n.im,this.coefficients[0][1][0]=a.re,this.coefficients[0][1][1]=a.im,this.coefficients[0][2][0]=e.re,this.coefficients[0][2][1]=e.im,this.coefficients[0][3][0]=n.re,this.coefficients[0][3][1]=n.im,this.coefficients[1][0][0]=t.re,this.coefficients[1][0][1]=t.im,this.coefficients[1][1][0]=s.re,this.coefficients[1][1][1]=s.im,this.coefficients[1][2][0]=s.re,this.coefficients[1][2][1]=s.im,this.coefficients[1][3][0]=i.re,this.coefficients[1][3][1]=i.im;for(let d=0;d<2;d++){var o=this.coefficients[d][0][0],h=this.coefficients[d][0][1],r=this.coefficients[d][1][0],c=this.coefficients[d][1][1],l=this.coefficients[d][2][0],f=this.coefficients[d][2][1],u=this.coefficients[d][3][0],m=this.coefficients[d][3][1];this.coefficients[d+2]=[[u,m],[-r,-c],[-l,-f],[o,h]]}}rileyCoefficients(p=this.wilson.draggables.ta.location){this.coefficients[0][0][0]=1,this.coefficients[0][0][1]=0,this.coefficients[0][1][0]=0,this.coefficients[0][1][1]=0,this.coefficients[0][2][0]=p[0],this.coefficients[0][2][1]=p[1],this.coefficients[0][3][0]=1,this.coefficients[0][3][1]=0,this.coefficients[1][0][0]=1,this.coefficients[1][0][1]=0,this.coefficients[1][1][0]=2,this.coefficients[1][1][1]=0,this.coefficients[1][2][0]=0,this.coefficients[1][2][1]=0,this.coefficients[1][3][0]=1;for(let r=this.coefficients[1][3][1]=0;r<2;r++){var e=this.coefficients[r][0][0],i=this.coefficients[r][0][1],s=this.coefficients[r][1][0],t=this.coefficients[r][1][1],n=this.coefficients[r][2][0],a=this.coefficients[r][2][1],o=this.coefficients[r][3][0],h=this.coefficients[r][3][1];this.coefficients[r+2]=[[o,h],[-s,-t],[-n,-a],[e,i]]}}grandmaSpecialCoefficients(p1=this.wilson.draggables.ta.location,p2=this.wilson.draggables.tb.location,p3=this.wilson.draggables.tc.location){var e=new this.Complex(p1[0],p1[1]),i=new this.Complex(p2[0],p2[1]),s=new this.Complex(p3[0],p3[1]),t=new this.Complex(0,1),n=new this.Complex(2,0),a=e.mul(e).add(i.mul(i)).add(s.mul(s)).sub(e.mul(i).mul(s)).sub(2),n=n.sub(a).sqrt(),o=a.add(t.mul(n).mul(a.add(2).sqrt())).abs(),a=a.add(2).sqrt().mul(2<=o?1:-1),o=s.sub(2).mul(i.add(a)).div(i.mul(s).sub(e.mul(2)).add(t.mul(n).mul(s))),a=e.div(2),h=e.mul(s).sub(i.mul(2)).add(t.mul(n).mul(2)).div(o.mul(s.mul(2).add(4))),r=o.mul(e.mul(s).sub(i.mul(2)).sub(t.mul(2).mul(n))).div(s.mul(2).sub(4)),c=i.sub(t.mul(n)).div(2),l=i.mul(s).sub(e.mul(2)).add(t.mul(n).mul(s)).div(o.mul(s.mul(2).add(4))),e=i.mul(s).sub(e.mul(2)).sub(t.mul(n).mul(s)).mul(o).div(s.mul(2).sub(4)),o=i.add(t.mul(n)).div(2);this.coefficients[0][0][0]=a.re,this.coefficients[0][0][1]=a.im,this.coefficients[0][1][0]=h.re,this.coefficients[0][1][1]=h.im,this.coefficients[0][2][0]=r.re,this.coefficients[0][2][1]=r.im,this.coefficients[0][3][0]=a.re,this.coefficients[0][3][1]=a.im,this.coefficients[1][0][0]=c.re,this.coefficients[1][0][1]=c.im,this.coefficients[1][1][0]=l.re,this.coefficients[1][1][1]=l.im,this.coefficients[1][2][0]=e.re,this.coefficients[1][2][1]=e.im,this.coefficients[1][3][0]=o.re,this.coefficients[1][3][1]=o.im;for(let w=0;w<2;w++){var f=this.coefficients[w][0][0],u=this.coefficients[w][0][1],m=this.coefficients[w][1][0],d=this.coefficients[w][1][1],p=this.coefficients[w][2][0],x=this.coefficients[w][2][1],g=this.coefficients[w][3][0],v=this.coefficients[w][3][1];this.coefficients[w+2]=[[g,v],[-m,-d],[-p,-x],[f,u]]}}bakeCoefficients=this.grandmaCoefficients;changeRecipe(recipe){"grandma"===recipe?(this.bakeCoefficients=this.grandmaCoefficients,this.wilson.draggables.tb.element.style.display="block",this.wilson.draggables.tc.element.style.display="none"):"riley"===recipe?(this.bakeCoefficients=this.rileyCoefficients,this.wilson.draggables.tb.element.style.display="none",this.wilson.draggables.tc.element.style.display="none"):"grandmaSpecial"===recipe&&(this.bakeCoefficients=this.grandmaSpecialCoefficients,this.wilson.draggables.tb.element.style.display="block",this.wilson.draggables.tc.element.style.display="block")}drawFrame(){this.bakeCoefficients();for(let i=0;i<4;i++)this.searchStep(0,0,i,1);let e=0;for(let s=0;s<this.brightness.length;s++)e=Math.max(e,this.brightness[s]);for(let t=0;t<this.wilson.canvasHeight*this.wilson.canvasWidth;t++)this.image[4*t]=0,this.image[4*t+1]=1,this.image[4*t+2]=Math.pow(this.brightness[t]/e,.15),this.image[4*t+3]=1;this.renderShaderStack()}renderShaderStack(){this.wilson.useShader("trim"),this.wilson.useFramebuffer(null),this.wilson.useTexture("image"),this.wilson.setTexture({id:"image",data:this.image}),this.wilson.drawFrame(),this.wilson.useShader("dilate"),this.wilson.useTexture("dilated");var e=1e6<=this.wilson.canvasWidth*this.wilson.canvasHeight?1:0;for(let s=0;s<e;s++){const i=this.wilson.readPixels();this.wilson.setTexture({id:"dilated",data:i}),this.wilson.drawFrame()}this.wilson.useShader("color");const i=this.wilson.readPixels();this.wilson.setTexture({id:"dilated",data:i}),this.wilson.drawFrame()}searchStep(startX,startY,lastTransformationIndex,depth){if(depth!==this.maxDepth)for(let e=3;e<6;e++){this.x=startX,this.y=startY;var i=(lastTransformationIndex+e)%4,s=(this.applyTransformation(i),this.wilson.canvasWidth>=this.wilson.canvasHeight?Math.floor((-this.y+boxSize/2)/boxSize*this.wilson.canvasHeight):Math.floor((-this.y*(this.wilson.canvasWidth/this.wilson.canvasHeight)+boxSize/2)/boxSize*this.wilson.canvasHeight)),t=this.wilson.canvasWidth>=this.wilson.canvasHeight?Math.floor((this.x/(this.wilson.canvasWidth/this.wilson.canvasHeight)+boxSize/2)/boxSize*this.wilson.canvasWidth):Math.floor((this.x+boxSize/2)/boxSize*this.wilson.canvasWidth);if(0<=s&&s<this.wilson.canvasHeight&&0<=t&&t<this.wilson.canvasWidth){if(this.brightness[this.wilson.canvasWidth*s+t]>=this.maxPixelBrightness)continue;10<depth&&this.brightness[this.wilson.canvasWidth*s+t]++}this.searchStep(this.x,this.y,i,depth+1)}}applyTransformation(index){var e=this.coefficients[index][0][0],i=this.coefficients[index][0][1],s=this.coefficients[index][1][0],t=this.coefficients[index][1][1],n=this.coefficients[index][2][0],a=this.coefficients[index][2][1],o=this.coefficients[index][3][0],h=this.coefficients[index][3][1],s=e*this.x-i*this.y+s,e=e*this.y+i*this.x+t,i=n*this.x-a*this.y+o,t=n*this.y+a*this.x+h,o=e*i-s*t,n=i*i+t*t;this.x=(s*i+e*t)/n,this.y=o/n}onGrabDraggable(){this.wilson.resizeCanvas({width:this.resolutionSmall}),this.maxDepth=200,this.maxPixelBrightness=50,this.needNewFrame=!0}onReleaseDraggable(){this.wilson.resizeCanvas({width:this.resolutionLarge}),this.maxDepth=500,this.maxPixelBrightness=200,this.needNewFrame=!0}onDragDraggable(){for(let e=0;e<this.wilson.canvasHeight*this.wilson.canvasWidth;e++)this.brightness[e]=0;this.needNewFrame=!0}async requestHighResFrame(resolution,maxDepth,maxPixelBrightness){this.maxDepth=maxDepth,this.maxPixelBrightness=maxPixelBrightness,this.wilson.resizeCanvas({width:resolution}),this.webWorker=addTemporaryWorker("/applets/quasi-fuchsian-groups/scripts/worker.js");var e=new Promise(resolve=>{this.webWorker.onmessage=e=>{this.brightness=e.data[0];for(let i=0;i<this.wilson.canvasHeight*this.wilson.canvasWidth;i++)this.image[4*i]=0,this.image[4*i+1]=1,this.image[4*i+2]=this.brightness[i],this.image[4*i+3]=1;this.renderShaderStack(),resolve()}});this.webWorker.postMessage([resolution,this.maxDepth,this.maxPixelBrightness,this.coefficients]),await e}onResizeCanvas(){this.wilson.createFramebufferTexturePair({id:"image",textureType:"float"}),this.wilson.createFramebufferTexturePair({id:"dilated",textureType:"unsignedByte"}),this.image=new Float32Array(this.wilson.canvasWidth*this.wilson.canvasHeight*4),this.brightness=new Float32Array(this.wilson.canvasWidth*this.wilson.canvasHeight),this.wilson.setUniforms({stepSize:[1/this.wilson.canvasWidth,1/this.wilson.canvasHeight]},"trim"),this.wilson.setUniforms({stepSize:[1/this.wilson.canvasWidth,1/this.wilson.canvasHeight]},"dilate"),this.wilson.setUniforms({aspectRatio:[Math.max(this.wilson.canvasWidth/this.wilson.canvasHeight,1),Math.max(this.wilson.canvasHeight/this.wilson.canvasWidth,1)]},"color");for(let e=0;e<this.wilson.canvasWidth*this.wilson.canvasHeight;e++)this.brightness[e]=0;this.needNewFrame=!0}}export{QuasiFuchsianGroups};