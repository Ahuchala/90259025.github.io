import anime from"/scripts/anime.min.js";import{getEqualPixelFullScreen}from"/scripts/applets/applet.min.js";import{RaymarchApplet}from"/scripts/applets/raymarchApplet.min.js";import{addTemporaryListener}from"/scripts/src/main.min.js";import{Wilson}from"/scripts/wilson.min.js";class RaymarchingFundamentals extends RaymarchApplet{cameraPos=[1,1,1];theta=1.25*Math.PI;phi=Math.PI/2;lockZ=1;objectRotation=0;objectFloat=0;constructor({canvas,fragShaderSource,uniforms}){super(canvas);var i={renderer:"gpu",shader:fragShaderSource,canvasWidth:500,canvasHeight:500,worldCenterX:-this.theta,worldCenterY:-this.phi,useFullscreen:!0,trueFullscreen:!0,useFullscreenButton:!0,enterFullscreenButtonIconPath:"/graphics/general-icons/enter-fullscreen.png",exitFullscreenButtonIconPath:"/graphics/general-icons/exit-fullscreen.png",switchFullscreenCallback:this.changeResolution.bind(this),mousedownCallback:this.onGrabCanvas.bind(this),touchstartCallback:this.onGrabCanvas.bind(this),mousedragCallback:this.onDragCanvas.bind(this),touchmoveCallback:this.onDragCanvas.bind(this),mouseupCallback:this.onReleaseCanvas.bind(this),touchendCallback:this.onReleaseCanvas.bind(this)};this.wilson=new Wilson(canvas,i),this.wilson.render.initUniforms(["aspectRatioX","aspectRatioY","imageSize","cameraPos","imagePlaneCenterPos","forwardVec","rightVec","upVec","distanceToScene","objectRotation","objectFloat",...uniforms]),this.calculateVectors(),this.imageWidth>=this.imageHeight?(this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatioX,this.imageWidth/this.imageHeight),this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatioY,1)):(this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatioX,1),this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatioY,this.imageWidth/this.imageHeight)),this.wilson.gl.uniform1i(this.wilson.uniforms.imageSize,this.imageSize),this.wilson.gl.uniform3fv(this.wilson.uniforms.cameraPos,this.cameraPos),this.wilson.gl.uniform3fv(this.wilson.uniforms.imagePlaneCenterPos,this.imagePlaneCenterPos),this.wilson.gl.uniform3fv(this.wilson.uniforms.forwardVec,this.forwardVec),this.wilson.gl.uniform3fv(this.wilson.uniforms.rightVec,this.rightVec),this.wilson.gl.uniform3fv(this.wilson.uniforms.upVec,this.upVec),this.wilson.gl.uniform1f(this.wilson.uniforms.distanceToScene,this.distanceToScene),this.wilson.gl.uniform1f(this.wilson.uniforms.objectRotation,this.objectRotation),this.wilson.gl.uniform1f(this.wilson.uniforms.objectFloat,this.objectFloat);addTemporaryListener({object:window,event:"resize",callback:()=>this.changeResolution()}),this.resume()}updateRotationAndFloat(){this.objectRotation+=.003,this.wilson.gl.uniform1f(this.wilson.uniforms.objectRotation,this.objectRotation),this.objectFloat=.1*Math.sin(3*this.objectRotation),this.wilson.gl.uniform1f(this.wilson.uniforms.objectFloat,this.objectFloat),this.needNewFrame=!0}prepareFrame(timeElapsed){this.pan.update(timeElapsed),this.zoom.update(timeElapsed),this.moveUpdate(timeElapsed),this.updateRotationAndFloat()}drawFrame(){this.wilson.worldCenterY=Math.min(Math.max(this.wilson.worldCenterY,.01-Math.PI),-.01),this.theta=-this.wilson.worldCenterX,this.phi=-this.wilson.worldCenterY,this.wilson.render.drawFrame()}distanceEstimator(){return 1}changeResolution(resolution=this.imageSize){this.imageSize=Math.max(100,resolution),this.wilson.fullscreen.currentlyFullscreen?[this.imageWidth,this.imageHeight]=getEqualPixelFullScreen(this.imageSize):(this.imageWidth=this.imageSize,this.imageHeight=this.imageSize),this.wilson.changeCanvasSize(this.imageWidth,this.imageHeight),this.imageWidth>=this.imageHeight?(this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatioX,this.imageWidth/this.imageHeight),this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatioY,1)):(this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatioX,1),this.wilson.gl.uniform1f(this.wilson.uniforms.aspectRatioY,this.imageWidth/this.imageHeight)),this.wilson.gl.uniform1i(this.wilson.uniforms.imageSize,this.imageSize),this.needNewFrame=!0}animateUniform({name,oldValue=this[name],value,duration=250}){const i={t:oldValue};return anime({targets:i,t:value,duration:duration,easing:"easeInOutQuart",update:()=>{this[name]=i.t,this.wilson.gl.uniform1f(this.wilson.uniforms[name],this[name]),this.needNewFrame=!0}}).finished}loopUniform({name,startValue,endValue,duration=2e3}){const t={t:0};return anime({targets:t,t:1,duration:duration,easing:"easeInOutQuad",loop:!0,direction:"alternate",update:()=>{var i=startValue+(endValue-startValue)*t.t;this.wilson.gl.uniform1f(this.wilson.uniforms[name],i),this.needNewFrame=!0}})}}export{RaymarchingFundamentals};