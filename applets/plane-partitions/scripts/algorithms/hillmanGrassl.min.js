async function hillmanGrassl(index){var s=this.arrays[index],a=structuredClone(s.numbers),h=new Array(a.length);for(let r=0;r<a.length;r++){let e=0;for(;e<a.length&&a[e][r]===1/0;)e++;h[r]=e}var n=new Array(a.length);for(let i=0;i<a.length;i++){let e=0;for(;e<a.length&&a[i][e]===1/0;)e++;n[i]=e}for(var o=[];;){let e=a[0].length-1;for(;0<=e&&h[e]<a.length&&0===a[h[e]][e];)e--;if(e<0||h[e]===a.length)break;let t=h[e],r=e;for(var l=[[t,r,a[t][r]-1]];;){if(t<a.length-1&&a[t+1][r]===a[t][r])t++;else{if(!(0<r&&a[t][r-1]!==1/0))break;r--}l.push([t,r,a[t][r]-1])}for(let i=0;i<l.length;i++)a[l[i][0]][l[i][1]]--;o.push(l)}var t=new Array(a.length);for(let w=0;w<a.length;w++){t[w]=new Array(a.length);for(let e=0;e<a.length;e++)t[w][e]=a[w][e]===1/0?1/0:0}var u=await this.addNewArray(index+1,t);await new Promise(resolve=>setTimeout(resolve,this.animationTime));for(let c=0;c<o.length;c++){var g=c/o.length*6/7;await this.colorCubes(s,o[c],g),await this.raiseCubes(s,o[c],s.height);for(let t=0;t<o[c].length;t++)s.numbers[o[c][t][0]][o[c][t][1]]--,this.in2dView&&this.drawSingleCell2dViewText(s,o[c][t][0],o[c][t][1]);this.recalculateHeights(s),await new Promise(resolve=>setTimeout(resolve,this.animationTime/5));var m=[o[c][o[c].length-1][0],o[c][0][1]];let e=[];var f=u.height+1;for(let r=h[m[1]];r<=m[0];r++)e.push([r,m[1],f]);g=e[e.length-1];for(let i=m[1]-1;i>=n[m[0]];i--)e.push([m[0],i,f]);await this.moveCubes(s,o[c],u,e),e=[];for(let a=m[0]-1;a>=h[m[1]];a--)e.push([a,m[1],f]);this.deleteCubes(u,e),e=[];for(let l=m[1]-1;l>=n[m[0]];l--)e.push([m[0],l,f]);this.deleteCubes(u,e),await this.lowerCubes(u,[g]),u.numbers[g[0]][g[1]]++,this.recalculateHeights(u),this.in2dView&&this.drawSingleCell2dViewText(u,g[0],g[1]),u.height=Math.max(u.height,u.numbers[g[0]][g[1]]),u.size=Math.max(u.size,u.height),await new Promise(resolve=>setTimeout(resolve,this.animationTime))}this.currentlyAnimatingCamera=!1,await this.removeArray(index)}async function hillmanGrasslInverse(index){var h=this.arrays[index],a=structuredClone(h.numbers),n=[],o=new Array(a.length);for(let r=0;r<a.length;r++){let e=0;for(;e<a.length&&a[e][r]===1/0;)e++;o[r]=e}var u=new Array(a.length);for(let i=0;i<a.length;i++){let e=0;for(;e<a.length&&a[i][e]===1/0;)e++;u[i]=e}var t=new Array(a.length);for(let d=0;d<a.length;d++){t[d]=new Array(a.length);for(let e=0;e<a.length;e++)t[d][e]=a[d][e]===1/0?1/0:0}var l=structuredClone(t);const g=await this.addNewArray(index+1,t);for(let b=0;b<a.length;b++)for(let t=a.length-1;t>=o[b];t--)for(;0!==a[t][b];){var s=[];let r=t,i=u[t];for(;0<=r;){let e=i;if(0!==r)for(;l[r][e]!==l[r-1][e]&&e<b;)e++;else e=b;for(let t=i;t<=e;t++)s.push([r,t,l[r][t]]);if(!(r-1>=o[e]))break;r--,i=e}for(let e=0;e<s.length;e++)l[s[e][0]][s[e][1]]++;n.push([s,[t,b,a[t][b]-1]]),a[t][b]--}await new Promise(resolve=>setTimeout(resolve,this.animationTime/2));for(let y=0;y<n.length;y++){const C=y/n.length*6/7;await this.colorCubes(h,[n[y][1]],C);var m=n[y][1][0],f=n[y][1][1],w=h.size;for(let t=o[f];t<m;t++)h.cubes[t][f][w]=this.addCube(h,f,w,t),h.cubes[t][f][w].material.forEach(material=>material.color.setHSL(C,1,this.cubeLightness));for(let r=u[m];r<f;r++)h.cubes[m][r][w]=this.addCube(h,r,w,m),h.cubes[m][r][w].material.forEach(material=>material.color.setHSL(C,1,this.cubeLightness));await this.raiseCubes(h,[n[y][1]],w);let e=[];for(let i=m-1;i>=o[f];i--)e.push([i,f,w]);var c=this.revealCubes(h,e);e=[];for(let a=f-1;a>=u[m];a--)e.push([m,a,w]);var v=this.revealCubes(h,e);await Promise.all([c,v]),e=[];for(let l=u[m];l<f;l++)e.push([m,l,w]);e.push([m,f,h.numbers[m][f]-1]);for(let s=m-1;s>=o[f];s--)e.push([s,f,w]);c=n[y][0];const x=g.height+1;c.forEach(entry=>entry[2]=x),h.numbers[m][f]--,this.recalculateHeights(h),this.in2dView&&this.drawSingleCell2dViewText(h,m,f),await this.moveCubes(h,e,g,c),await this.lowerCubes(g,c),c.forEach(entry=>{g.numbers[entry[0]][entry[1]]++}),this.recalculateHeights(g),this.in2dView&&c.forEach(entry=>this.drawSingleCell2dViewText(g,entry[0],entry[1])),await new Promise(resolve=>setTimeout(resolve,this.animationTime/2))}this.currentlyAnimatingCamera=!1,await this.removeArray(index)}export{hillmanGrassl,hillmanGrasslInverse};