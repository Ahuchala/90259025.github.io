async function godar1(index){var e;let t=this.arrays[index].numbers;var i=new Array(2*t.length),r=new Array(2*t.length);for(let P=0;P<t.length;P++){let e=0;for(;e<t.length&&t[P][e]===1/0;)e++;for(i[P]=e,e=0;e<t.length&&t[e][P]===1/0;)e++;r[P]=e}for(let c=t.length;c<2*t.length;c++)i[c]=0,r[c]=0;var a=Math.max(i[0],r[0]),n=new Array(t.length);for(let C=0;C<t.length;C++){n[C]=new Array(t.length);for(let e=0;e<t.length;e++)t[C][e]===1/0?n[C][e]=this.infiniteHeight:n[C][e]=t[C][e]}await this.addNewArray(index+1,n),await new Promise(resolve=>setTimeout(resolve,this.animationTime/2)),await this.removeArray(index),await new Promise(resolve=>setTimeout(resolve,this.animationTime/2)),e=this.arrays[index],t=e.numbers;let s=0,h=0;for(;s<t.length&&0!==t[s][t.length-1];)s++;for(;h<t.length&&0!==t[t.length-1][h];)h++;await this.runAlgorithm("pak",index,!0),await new Promise(resolve=>setTimeout(resolve,2*this.animationTime)),e=this.arrays[index],t=e.numbers;var z=Math.max(s,h),l=new Array(t.length-z+1),B=[];for(let M=0;M<l.length-1;M++){l[M]=new Array(l.length);for(let r=0;r<l.length-1;r++){l[M][r]=t[M][r];for(let e=0;e<t[M][r];e++)B.push([M,r,e]);t[M][r]=0}l[M][l.length-1]=0}l[l.length-1]=new Array(l.length);for(let k=0;k<l.length;k++)l[l.length-1][k]=0;this.deleteCubes(e,B,!0,!0),await this.addNewArray(index,l),await new Promise(resolve=>setTimeout(resolve,this.animationTime/2)),await this.runAlgorithm("pakInverse",index,!0),await new Promise(resolve=>setTimeout(resolve,2*this.animationTime));var D=2*t.length-i[t.length-1]-r[t.length-1],E=i[0]+r[0],o=new Array(4*t.length),m=new Array(E),g=new Array(4*t.length);for(let I=0;I<4*t.length;I++)o[I]=new Array;for(let V=0;V<E;V++)m[V]=new Array;for(let K=0;K<4*t.length;K++)g[K]=new Array;let w=1;for(let N=0;N<2*t.length;N++)for(let e=0;e<2*t.length;e++)e>=i[N]?o[N+e+1-i[N]-r[e]].push([N,e]):m[i[N]+r[e]-N-e-1].unshift([a-N-1,a-e-1]),g[N+e+1].push([N,e]);var u=new Array(2*t.length);for(let L=0;L<2*t.length;L++)u[L]=new Array(2*t.length);for(let G=1;G<D;G++){var y=[];for(let e=0;e<o[G].length;e++){var d=o[G][e][0],f=o[G][e][1];if(d<t.length-h&&f<t.length-s)for(let e=0;e<this.arrays[index].numbers[d][f];e++)y.push([d,f,e]);e<g[G].length?(u[d][f]=[1,g[G][e]],d<t.length&&f<t.length&&0<this.arrays[index].numbers[d][f]&&(w=Math.max(Math.max(w,g[G][e][0]+1),g[G][e][1]+1))):u[d][f]=[0,m[G][e-g[G].length]]}0!==y.length&&this.colorCubes(this.arrays[index],y,(G-1)/(D-1)*6/7)}await new Promise(resolve=>setTimeout(resolve,3*this.animationTime));var x=new Array(a);for(let H=0;H<a;H++){x[H]=new Array(a);for(let e=0;e<a;e++)e<a-i[a-H-1]?x[H][e]=1/0:x[H][e]=0}let F;0<a&&(F=await this.addNewArray(index+1,x),await new Promise(resolve=>setTimeout(resolve,this.animationTime/2)));var v=new Array(w);for(let j=0;j<w;j++){v[j]=new Array(w);for(let e=0;e<w;e++)v[j][e]=0}var J=await this.addNewArray(index+2,v);for(let q=0;q<t.length-h;q++)for(let r=i[q];r<t.length-s;r++)if(0<this.arrays[index].numbers[q][r]){var A=[],b=[],T=u[q][r][1][0],p=u[q][r][1][1];for(let e=0;e<this.arrays[index].numbers[q][r];e++)A.push([q,r,e]),b.push([T,p,e]);0===u[q][r][0]?(await this.moveCubes(this.arrays[index],A,F,b),x[T][p]=this.arrays[index].numbers[q][r]):(await this.moveCubes(this.arrays[index],A,J,b),v[T][p]=this.arrays[index].numbers[q][r]),this.arrays[index].numbers[q][r]=0,this.in2dView&&this.drawAll2dViewText()}await new Promise(resolve=>setTimeout(resolve,3*this.animationTime)),await this.runAlgorithm("pakInverse",index,!0),0<a&&await this.runAlgorithm("hillmanGrasslInverse",index+1,!0)}async function godar1Inverse(index){var t=this.arrays[index+1].numbers,i=this.arrays[index].numbers,r=new Array(t.length+2*i.length),a=new Array(t.length+2*i.length);for(let b=0;b<t.length+2*i.length;b++)r[b]=0,a[b]=0;for(let T=0;T<i.length;T++){let e=i.length-1;for(;0<=e&&i[T][e]!==1/0;)e--;for(r[i.length-T-1]=i.length-e-1,e=i.length-1;0<=e&&i[e][T]!==1/0;)e--;a[i.length-T-1]=i.length-e-1}await this.runAlgorithm("pak",index,!0),await new Promise(resolve=>setTimeout(resolve,this.animationTime/2)),await this.runAlgorithm("pak",index+1,!0),await new Promise(resolve=>setTimeout(resolve,3*this.animationTime));let n=[],s=this.arrays[index].numbers;for(let p=0;p<s.length;p++)for(let r=0;r<s.length;r++)if(s[p][r]!==1/0)for(let e=0;e<s[p][r];e++)n.push([p,r,e]);this.uncolorCubes(this.arrays[index],n),n=[],s=this.arrays[index+1].numbers;for(let P=0;P<s.length;P++)for(let r=0;r<s.length;r++)if(s[P][r]!==1/0)for(let e=0;e<s[P][r];e++)n.push([P,r,e]);await this.uncolorCubes(this.arrays[index+1],n);let h=Math.max(r[0],a[0])+2*t.length-1;var e=2*h,l=r[0]+a[0],o=2*t.length,m=new Array(e),g=new Array(l),w=new Array(o);for(let c=0;c<e;c++)m[c]=new Array;for(let C=0;C<l;C++)g[C]=new Array;for(let M=0;M<o;M++){w[M]=new Array(M);for(let e=0;e<M;e++)w[M][e]=-1}for(;r.length<h;)r.push(0);for(;a.length<h;)a.push(0);for(let k=0;k<h;k++)for(let e=0;e<h;e++)e>=r[k]?m[k+e+1-r[k]-a[e]].push([k,e]):g[r[k]+a[e]-k-e-1].unshift([i.length-k-1,i.length-e-1]),k<t.length&&e<t.length&&(w[k+e+1][k]=[k,e]);var u=new Array(t.length);for(let I=0;I<t.length;I++)u[I]=new Array(t.length);var y=new Array(i.length);for(let V=0;V<i.length;V++)y[V]=new Array(i.length);for(let N=h=1;N<l;N++){const n=[];for(let r=0;r<g[N].length;r++){var d=g[N][r][0],f=g[N][r][1];for(let e=0;e<this.arrays[index].numbers[d][f];e++)n.push([d,f,e]);y[d][f]=m[N][r+w[N].length],0!==this.arrays[index].numbers[d][f]&&(h=Math.max(Math.max(h,y[d][f][0]+1),y[d][f][1]+1))}0!==n.length&&this.colorCubes(this.arrays[index],n,(N-1)/(l-1)*6/7)}for(let G=1;G<o;G++){const n=[];for(let r=0;r<w[G].length;r++)if(-1!==w[G][r]){var x=w[G][r][0],v=w[G][r][1];for(let e=0;e<this.arrays[index+1].numbers[x][v];e++)n.push([x,v,e]);u[x][v]=m[G][r],0!==this.arrays[index+1].numbers[x][v]&&(h=Math.max(Math.max(h,u[x][v][0]+1),u[x][v][1]+1))}0!==n.length&&this.colorCubes(this.arrays[index+1],n,(G-1)/(o-1)*6/7)}await new Promise(resolve=>setTimeout(resolve,3*this.animationTime));var A=new Array(h);for(let H=0;H<h;H++){A[H]=new Array(h);for(let e=0;e<h;e++)e<r[H]?A[H][e]=1/0:A[H][e]=0}var z=await this.addNewArray(index+2,A);await new Promise(resolve=>setTimeout(resolve,this.animationTime/2));for(let j=0;j<i.length;j++)for(let r=0;r<i.length;r++)if(0<this.arrays[index].numbers[j][r]&&this.arrays[index].numbers[j][r]!==1/0){var B=[],D=[],E=y[j][r][0],F=y[j][r][1];for(let e=0;e<this.arrays[index].numbers[j][r];e++)B.push([j,r,e]),D.push([E,F,e]);await this.moveCubes(this.arrays[index],B,z,D),A[E][F]=this.arrays[index].numbers[j][r],this.arrays[index].numbers[j][r]=0,this.in2dView&&this.drawAll2dViewText()}for(let q=0;q<t.length;q++)for(let r=0;r<t.length;r++)if(0<this.arrays[index+1].numbers[q][r]&&this.arrays[index+1].numbers[q][r]!==1/0){var J=[],K=[],L=u[q][r][0],O=u[q][r][1];for(let e=0;e<this.arrays[index+1].numbers[q][r];e++)J.push([q,r,e]),K.push([L,O,e]);await this.moveCubes(this.arrays[index+1],J,z,K),A[L][O]=this.arrays[index+1].numbers[q][r],this.arrays[index+1].numbers[q][r]=0,this.in2dView&&this.drawAll2dViewText()}await this.removeArray(index),await new Promise(resolve=>setTimeout(resolve,this.animationTime/2)),await this.removeArray(index),await new Promise(resolve=>setTimeout(resolve,3*this.animationTime)),await this.runAlgorithm("pakInverse",index,!0),await new Promise(resolve=>setTimeout(resolve,this.animationTime))}export{godar1,godar1Inverse};