async function rsk(index){var m=this.arrays[index],d=this.arrays[index+1],f=m.numbers,c=d.numbers;let r=0,v=0;for(let t=0;t<f.length;t++)for(let e=0;e<f.length;e++){if(f[t][e]===1/0||c[t][e]===1/0)return this.displayError("The SSYT contain infinite values, which is not allowed in RSK!"),void(this.currentlyRunningAlgorithm=!1);0!==f[t][e]&&v++,r=Math.max(Math.max(r,f[t][e]),c[t][e])}if(0===r)this.displayError("The SSYT are empty!"),this.currentlyRunningAlgorithm=!1;else{var b=new Array(r);for(let t=0;t<r;t++){b[t]=new Array(r);for(let e=0;e<r;e++)b[t][e]=0}var g=await this.addNewArray(index+2,b);let w=0;for(;0!==c[0][0];){var y=w/v*6/7;let t=0,r=0,i=0;for(let h=0;h<c.length;h++){let e=c.length-1;for(;0<=e&&0===c[h][e];)e--;0<=e&&(t=Math.max(t,c[h][e]))}for(let o=0;o<c.length;o++){let e=c.length-1;for(;0<=e&&0===c[o][e];)e--;if(c[o][e]===t){r=o,i=e;break}}var C=[],p=[],A=[],x=[],T=[],S=[];let s=r,a=i,l=f[s][a];for(var V=c[s][a],P=[[s,a]];0!==s;){let e=f.length-1;for(;0===f[s-1][e]||l<=f[s-1][e];)e--;for(let t=0;t<l;t++)C.push([s,a,t]),p.push([s-1,e,t]);s--,a=e,l=f[s][a],P.push([s,a])}var E=g.height+1;for(let e=0;e<l;e++)A.push([s,a,e]),x.push([V-1,e,E]);for(let n=0;n<V-1;n++)T.push([r,i,n]),S.push([n,l-1,E]);this.colorCubes(d,T.concat([[r,i,V-1]]),y),this.colorCubes(m,C,y),await this.colorCubes(m,A,y),c[r][i]=0;for(let u=P.length-1;0<u;u--)f[P[u][0]][P[u][1]]=f[P[u-1][0]][P[u-1][1]];if(f[r][i]=0,this.in2dView){this.drawSingleCell2dViewText(m,r,i);for(let e=P.length-1;0<e;e--)this.drawSingleCell2dViewText(m,P[e][0],P[e][1]);this.drawSingleCell2dViewText(d,r,i)}await Promise.all([this.moveCubes(d,T,g,S),this.moveCubes(m,A,g,x),this.moveCubes(m,C,m,p),this.moveCubes(d,[[r,i,V-1]],g,[[V-1,l-1,E]],!1)]),this.uncolorCubes(m,p),g.cubeGroup.remove(d.cubes[r][i][V-1]),this.deleteCubes(d,[[r,i,V-1]],!0,!0),x.reverse(),S.reverse(),this.deleteCubes(g,x.slice(1)),this.deleteCubes(g,S),await this.lowerCubes(g,[[V-1,l-1,E]]),b[V-1][l-1]++,this.in2dView&&this.drawSingleCell2dViewText(g,V-1,l-1),this.recalculateHeights(g),w++,await new Promise(resolve=>setTimeout(resolve,this.animationTime/2))}this.currentlyAnimatingCamera=!1,await this.removeArray(index),await new Promise(resolve=>setTimeout(resolve,this.animationTime)),await this.removeArray(index)}}async function rskInverse(index){var n=this.arrays[index],s=structuredClone(n.numbers);let u=0,w=(s.forEach(row=>row.forEach(entry=>u+=entry)),new Array(u)),m=new Array(u);for(let r=0;r<u;r++){w[r]=new Array(u),m[r]=new Array(u);for(let e=0;e<u;e++)w[r][e]=0,m[r][e]=0}var a=new Array(s.length);for(let e=0;e<s.length;e++)a[e]=0;let l=0;var d=[],f=[],c=[];for(let M=0;M<s.length;M++)for(let i=0;i<s.length;i++)for(;0!==s[M][i];){s[M][i]--;let e=i+1,t=0,r=0;for(var h=[];;){for(r=a[t];0!==r&&w[t][r-1]>e;)r--;if(r===a[t]){w[t][r]=e,a[t]++,0===r&&l++,h.push([t,r]);break}var o=w[t][r];w[t][r]=e,e=o,h.push([t,r]),t++}d.push(h),f.push([t,r]),c.push([M,i]),m[t][r]=M+1}var t=Math.max(a[0],l);w=new Array(t),m=new Array(t);for(let i=0;i<t;i++){w[i]=new Array(t),m[i]=new Array(t);for(let e=0;e<t;e++)w[i][e]=0,m[i][e]=0}var v=await this.addNewArray(index+1,w),b=(await new Promise(resolve=>setTimeout(resolve,this.animationTime/2)),await this.addNewArray(index+2,m));await new Promise(resolve=>setTimeout(resolve,this.animationTime/2));let g=0;for(let N=0;N<c.length;N++){var y=c[N][0],C=c[N][1],p=n.height+1;const R=g/u*6/7;for(let t=C;0<=t;t--)n.cubes[y][t][p]=this.addCube(n,t,p,y),n.cubes[y][t][p].material.forEach(material=>material.color.setHSL(R,1,this.cubeLightness));for(let r=y-1;0<=r;r--)n.cubes[r][C][p]=this.addCube(n,C,p,r),n.cubes[r][C][p].material.forEach(material=>material.color.setHSL(R,1,this.cubeLightness));n.cubes[y][C][p+1]=this.addCube(n,C,p,y),n.cubes[y][C][p+1].material.forEach(material=>material.color.setHSL(R,1,this.cubeLightness)),await this.colorCubes(n,[[y,C,n.numbers[y][C]-1]],R),await this.raiseCubes(n,[[y,C,n.numbers[y][C]-1]],p);var A=this.revealCubes(n,[[y,C,p+1]]);let e=[];for(let i=C-1;0<=i;i--)e.push([y,i,p]);var x=this.revealCubes(n,e);e=[];for(let s=y-1;0<=s;s--)e.push([s,C,p]);var T=this.revealCubes(n,e),S=(await Promise.all([A,x,T]),d[g]),V=[],P=[],E=[[y,C,n.numbers[y][C]-1]],H=[[S[0][0],S[0][1],C]],k=[[y,C,p+1]],L=[[f[g][0],f[g][1],y]];for(let a=C-1;0<=a;a--)E.push([y,a,p]),H.push([S[0][0],S[0][1],a]);for(let l=0;l<S.length-1;l++)for(let e=0;e<w[S[l][0]][S[l][1]];e++)V.push([S[l][0],S[l][1],e]),P.push([S[l+1][0],S[l+1][1],e]);for(let h=y-1;0<=h;h--)k.push([h,C,p]),L.push([f[g][0],f[g][1],h]);await this.colorCubes(v,V,R);for(let o=S.length-1;0<o;o--)w[S[o][0]][S[o][1]]=w[S[o-1][0]][S[o-1][1]];0!==S.length&&(w[S[0][0]][S[0][1]]=0),this.in2dView&&this.drawAll2dViewText(),0!==V.length&&await this.moveCubes(v,V,v,P),n.numbers[y][C]--,this.in2dView&&this.drawAll2dViewText(),await Promise.all([this.moveCubes(n,E,v,H),this.moveCubes(n,k,b,L)]),w[S[0][0]][S[0][1]]=C+1,m[f[g][0]][f[g][1]]=y+1,this.in2dView&&this.drawAll2dViewText(),this.recalculateHeights(n),this.recalculateHeights(v),this.recalculateHeights(b),g++,await new Promise(resolve=>setTimeout(resolve,this.animationTime/2))}this.currentlyAnimatingCamera=!1,await this.removeArray(index)}export{rsk,rskInverse};