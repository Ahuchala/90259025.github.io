import anime from"/scripts/anime.min.js";import{changeOpacity}from"/scripts/src/animation.min.js";import*as THREE from"/scripts/three.js";async function addNewArray(index,numbers,keepNumbersCanvasVisible=!1,horizontalLegs=!0){if(!this.currentlyAnimatingCamera){let t=!(this.currentlyAnimatingCamera=!0);var r={numbers:numbers,cubes:[],floor:[],leftWall:[],rightWall:[],cubeGroup:null,centerOffset:0,partialFootprintSum:0,footprint:0,height:0,size:0};this.in2dView&&!keepNumbersCanvasVisible&&await changeOpacity({element:this.wilsonNumbers.canvas,opacity:0,duration:this.animationTime/5}),this.arrays.splice(index,0,r),r.footprint=r.numbers.length;for(let e=index;e<this.arrays.length;e++)this.arrays[e].partialFootprintSum=this.arrays[e].footprint,0!==e?(this.arrays[e].centerOffset=this.arrays[e-1].centerOffset+this.arrays[e-1].footprint/2+this.arrays[e].footprint/2+1,this.arrays[e].partialFootprintSum+=this.arrays[e-1].partialFootprintSum+1):this.arrays[e].centerOffset=0,e!==index&&(this.in2dView?anime({targets:this.arrays[e].cubeGroup.position,x:this.arrays[e].centerOffset,y:0,z:0,duration:this.animationTime,easing:"easeInOutQuad"}):anime({targets:this.arrays[e].cubeGroup.position,x:this.abConfigMode?0:this.arrays[e].centerOffset,y:0,z:this.abConfigMode?0:-this.arrays[e].centerOffset,duration:this.animationTime,easing:"easeInOutQuad"}));r.cubeGroup=new THREE.Object3D,this.scene.add(r.cubeGroup),this.abConfigMode?r.cubeGroup.position.set(0,0,0):this.in2dView?r.cubeGroup.position.set(r.centerOffset,0,0):r.cubeGroup.position.set(r.centerOffset,0,-r.centerOffset),r.cubeGroup.rotation.y=-1.5*this.wilsonNumbers.worldCenterX,r.cubes=new Array(r.footprint),r.floor=new Array(r.footprint);for(let a=0;a<r.footprint;a++){r.cubes[a]=new Array(r.footprint),r.floor[a]=new Array(r.footprint);for(let i=0;i<r.footprint;i++)if(r.numbers[a][i]!==1/0)if(r.cubes[a][i]=new Array(r.numbers[a][i]),r.numbers[a][i]>r.height&&(r.height=r.numbers[a][i]),r.floor[a][i]=this.addFloor(r,i,a),horizontalLegs){var s=Math.max(r.numbers[a][r.footprint-1],r.numbers[r.footprint-1][i]);for(let t=0;t<s;t++)r.cubes[a][i][t]=this.addCube(r,i,t,a,0,0,this.asymptoteLightness);for(let e=s;e<r.numbers[a][i];e++)r.cubes[a][i][e]=this.addCube(r,i,e,a)}else for(let t=0;t<r.numbers[a][i];t++)r.cubes[a][i][t]=this.addCube(r,i,t,a);else{r.cubes[a][i]=new Array(this.infiniteHeight),r.floor[a][i]=this.addFloor(r,i,a);for(let t=0;t<this.infiniteHeight;t++)r.cubes[a][i][t]=this.addCube(r,i,t,a,0,0,this.asymptoteLightness)}}if(this.abConfigMode){r.leftWall=new Array(this.wallWidth),r.rightWall=new Array(this.wallWidth);for(let t=0;t<this.wallWidth;t++)r.leftWall[t]=new Array(this.wallHeight),r.rightWall[t]=new Array(this.wallHeight);for(let e=0;e<this.wallWidth;e++)for(let t=0;t<this.wallHeight;t++)r.leftWall[e][t]=this.addLeftWall(r,t,e),r.rightWall[e][t]=this.addRightWall(r,e,t)}r.size=Math.max(r.footprint,r.height),this.totalArrayFootprint+=r.footprint+1,this.totalArrayHeight=Math.max(this.totalArrayHeight,r.height),this.totalArraySize=Math.max(this.totalArrayFootprint,this.totalArrayHeight),1!==this.arrays.length||keepNumbersCanvasVisible?this.abConfigMode||keepNumbersCanvasVisible||(this.updateCameraHeight(!0),t=!0):(this.hexViewCameraPos=[this.totalArraySize,this.totalArraySize+this.totalArrayHeight/3,this.totalArraySize],this._2dViewCameraPos=[0,this.totalArraySize+10,0],!this.in2dView||keepNumbersCanvasVisible||this.abConfigMode?(this.orthographicCamera.left=-this.totalArraySize,this.orthographicCamera.right=this.totalArraySize,this.orthographicCamera.top=this.totalArraySize,this.orthographicCamera.bottom=-this.totalArraySize,this.orthographicCamera.position.set(this.hexViewCameraPos[0],this.hexViewCameraPos[1],this.hexViewCameraPos[2]),this.orthographicCamera.rotation.set(-.785398163,.615479709,.523598775),this.orthographicCamera.updateProjectionMatrix()):(this.updateCameraHeight(!0),t=!0)),index!==this.arrays.length-1&&await new Promise(resolve=>setTimeout(resolve,this.animationTime));const i=[];return r.cubeGroup.traverse(node=>{node.material&&node.material.forEach(material=>i.push(material))}),await anime({targets:i,opacity:1,duration:this.animationTime/2,easing:"easeOutQuad"}).finished,this.in2dView&&!keepNumbersCanvasVisible&&this.drawAll2dViewText(),t||(this.currentlyAnimatingCamera=!1),this.needNewFrame=!0,r}}async function editArray(index,numbers){this.currentlyAnimatingCamera||(index>=this.arrays.length||index<0?this.displayError("No array at index "+index):(await this.removeArray(index),await this.addNewArray(index,numbers),this.currentlyAnimatingCamera=!1,this.in2dView||this.updateCameraHeight()))}async function trimArray(index){if(!this.currentlyAnimating)if(index>=this.arrays.length||index<0)this.displayError("No array at index "+index);else{var r=this.arrays[index].numbers;let e=0;for(let i=0;i<r.length;i++)for(let t=0;t<r.length;t++)0!==r[i][t]&&(e=Math.max(e,Math.max(i+1,t+1)));var s=new Array(e);for(let a=0;a<e;a++){s[a]=new Array(e);for(let t=0;t<e;t++)s[a][t]=r[a][t]}await this.removeArray(index),await this.addNewArray(index,s),this.in2dView||this.updateCameraHeight()}}async function removeArray(index,keepNumbersCanvasVisible=!1){if(!this.currentlyAnimatingCamera)if(this.currentlyAnimatingCamera=!0,index>=this.arrays.length||index<0)this.displayError("No array at index "+index);else{this.in2dView&&!keepNumbersCanvasVisible&&await changeOpacity({element:this.wilsonNumbers.canvas,opacity:0,duration:this.animationTime/5});const e=[];this.arrays[index].cubeGroup.traverse(node=>{node.material&&node.material.forEach(material=>e.push(material))}),await anime({targets:e,opacity:0,duration:this.animationTime/2,easing:"easeOutQuad",update:()=>this.needNewFrame=!0,complete:()=>this.needNewFrame=!0}).finished;for(let i=0;i<this.arrays[index].cubes.length;i++)for(let e=0;e<this.arrays[index].cubes[i].length;e++)if(this.arrays[index].cubes[i][e])for(let t=0;t<this.arrays[index].cubes[i][e].length;t++)this.arrays[index].cubes[i][e][t]&&this.arrays[index].cubes[i][e][t].material.forEach(material=>material.dispose());this.scene.remove(this.arrays[index].cubeGroup),this.totalArrayFootprint-=this.arrays[index].footprint+1,this.arrays.splice(index,1);for(let t=index;t<this.arrays.length;t++)this.arrays[t].partialFootprintSum=this.arrays[t].footprint,0!==t?(this.arrays[t].centerOffset=this.arrays[t-1].centerOffset+this.arrays[t-1].footprint/2+this.arrays[t].footprint/2+1,this.arrays[t].partialFootprintSum+=this.arrays[t-1].partialFootprintSum+1):this.arrays[t].centerOffset=0,this.in2dView?anime({targets:this.arrays[t].cubeGroup.position,x:this.arrays[t].centerOffset,y:0,z:0,duration:this.animationTime,easing:"easeInOutQuad",update:()=>this.needNewFrame=!0,complete:()=>this.needNewFrame=!0}):anime({targets:this.arrays[t].cubeGroup.position,x:this.abConfigMode?0:this.arrays[t].centerOffset,y:0,z:this.abConfigMode?0:-this.arrays[t].centerOffset,duration:this.animationTime,easing:"easeInOutQuad",update:()=>this.needNewFrame=!0,complete:()=>this.needNewFrame=!0});this.currentlyAnimatingCamera=!1,0===this.arrays.length||keepNumbersCanvasVisible||this.updateCameraHeight(!0)}}export{addNewArray,editArray,trimArray,removeArray};