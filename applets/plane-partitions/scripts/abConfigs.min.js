import{verifyPp}from"./parseAndVerify.min.js";const absoluteMinAEntry=-5;function isValidABConfig({lambda,mu,nu,A,B}){if(!verifyPp(A)||!verifyPp(B))return!1;for(;lambda.length<nu[0];)lambda.push(0);for(;mu.length<nu.length;)mu.push(0);const e=[];let a=0,t=0;for(;A[a][0]===1/0;)a++;for(;A[0][t]===1/0;)t++;if(A[a-1][t-1]!==1/0)throw new Error("Infinite part of A is not rectangular!");for(let c=0;c<A.length;c++)for(let n=0;n<A[c].length;n++){const v=c-a,y=n-t;if(!(v<0&&y<0)){const x=0<=v&&v<nu.length&&0<=y&&y<nu[v];var r=0<=y?lambda[y]:1/0,i=0<=v?mu[v]:1/0;if(A[c][n]>Math.min(r,i))return!1;if(0<=v&&0<=y){if(B[v][y]<0)return!1;if(x&&B[v][y]>Math.max(r,i))return!1;if(!x&&B[v][y]>Math.min(r,i))return!1;if(!x&&A[c][n]!==-1/0)return!1}else if(A[c][n]<0)return!1;var[l,o]=v<0?[lambda[y],0]:y<0?[mu[v],0]:x?[Math.min(lambda[y],mu[v]),Math.max(lambda[y],mu[v])]:[0,Math.min(lambda[y],mu[v])];for(let a=x?absoluteMinAEntry:0;a<Math.max(l,o);a++){var[u,m]=(()=>{if(v<0)return[1,1];if(y<0)return[1,2];if(a<0)return[1,3];if(x&&a<Math.min(lambda[y],mu[v]))return[3,0];if(!x)return[2,3];if(a>=lambda[y])return[2,1];if(a>=mu[v])return[2,2];throw new Error("Region/label code is broken")})(),g=A[c][n]<=a&&a<l,h=0<=v&&0<=y&&B[v][y]<=a&&a<o,f=0<=v&&0<=y&&a<o&&0<=a;(1===u&&g||2===u&&!h&&f||3===u&&(g&&!h||!g&&h))&&e.push([v,y,a,m,u])}}}var s=[];const b=structuredClone(e),d=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]];for(;0!==b.length;){let a=[],n=[b[0]];for(b.splice(0,1);0!==n.length;){const M=[];n.forEach(activeBox=>{d.forEach(direction=>{var a=boxIsInArray([activeBox[0]+direction[0],activeBox[1]+direction[1],activeBox[2]+direction[2]],b);-1!==a&&(M.push(b[a]),b.splice(a,1))})}),a=a.concat(n),n=M}s.push(a)}for(let C=0;C<s.length;C++){var n=new Set(s[C].map(box=>box[3]));if(n.delete(0),1<n.size)return[!1,void 0];if(0!==n.size){const[p]=n;s[C].forEach(box=>{var a=boxIsInArray(box,e);e[a][3]=p})}}return[!0,e,s]}function boxIsInArray(box,array){for(let n=0;n<array.length;n++){var a=array[n];if(a[0]===box[0]&&a[1]===box[1]&&a[2]===box[2])return n}return-1}function getAsciiLabel(box,boxes){var a=boxIsInArray(box,boxes);return-1===a?"∅":0===(a=boxes[a][3])?"*":""+a}function getMinimalABConfig({lambda,mu,nu,negativeWidth=2}){for(;lambda.length<nu[0];)lambda.push(0);for(;mu.length<nu.length;)mu.push(0);var n=new Array(negativeWidth+mu.length),e=new Array(mu.length);for(let i=0;i<n.length;i++){n[i]=new Array(negativeWidth+lambda.length),i>=negativeWidth&&(e[i-negativeWidth]=new Array(lambda.length));for(let a=0;a<n[i].length;a++){const l=i-negativeWidth,o=a-negativeWidth;if(l<0&&o<0)n[i][a]=1/0;else{const u=0<=l&&l<nu.length&&0<=o&&o<nu[l];var[t,r]=l<0?[lambda[o],0]:o<0?[mu[l],0]:u?[Math.min(lambda[o],mu[l]),Math.max(lambda[o],mu[l])]:[-1/0,Math.min(lambda[o],mu[l])];n[i][a]=t,0<=l&&0<=o&&(e[l][o]=r)}}}return[n,e]}function iterateThroughEntries({lambda,mu,nu,A,B,i,j}){for(;lambda.length<nu[0];)lambda.push(0);for(;mu.length<nu.length;)mu.push(0);let a=0,n=0;for(;A[a][0]===1/0;)a++;for(;A[0][n]===1/0;)n++;var r=i-a,l=j-n;if(!(r<0&&l<0)){var e=0<=r&&r<nu.length&&0<=l&&l<nu[r],o=0<=r&&0<=l&&!e?-1/0:Math.min(0===i?lambda[l]:A[i-1][j],0===j?mu[r]:A[i][j-1]),u=Math.max(Math.max(i===A.length-1?-1/0:A[i+1][j],j===A[0].length-1?-1/0:A[i][j+1]),e?absoluteMinAEntry:0),m=0<=r&&0<=l?Math.min(0==r?Math.max(lambda[l],mu[r]):B[r-1][l],0==l?Math.max(lambda[l],mu[r]):B[r][l-1]):1/0,g=0<=r&&0<=l?Math.max(r==B.length-1?0:B[1+r][l],l==B[0].length-1?0:B[r][1+l]):1/0,h=structuredClone(A),f=structuredClone(B);let t="";if(o===-1/0)for(let a=m;a>=g;a--){f[r][l]=a;var s=isValidABConfig({lambda:lambda,mu:mu,nu:nu,A:h,B:f});if(s[0]){let a=getAsciiLabel([r,l,h[i][j]],s[1]);"∅"===a&&0<=r&&0<=l&&(a=getAsciiLabel([r,l,f[r][l]],s[1])),t=t+a+" "}else t+="  "}else if(m===1/0)for(let n=o;n>=u;n--){h[i][j]=n;var b=isValidABConfig({lambda:lambda,mu:mu,nu:nu,A:h,B:f});if(b[0]){let a=getAsciiLabel([r,l,h[i][j]],b[1]);"∅"===a&&0<=r&&0<=l&&(a=getAsciiLabel([r,l,f[r][l]],b[1])),t=t+(n===absoluteMinAEntry?"v":a)+"\n"}else t+="\n"}else for(let e=o;e>=u;e--){for(let a=m;a>=g;a--){h[i][j]=e,f[r][l]=a;var d=isValidABConfig({lambda:lambda,mu:mu,nu:nu,A:h,B:f});if(d[0]){let a=getAsciiLabel([r,l,h[i][j]],d[1]);"∅"===a&&0<=r&&0<=l&&(a=getAsciiLabel([r,l,f[r][l]],d[1])),t=t+(e===absoluteMinAEntry?"v":a)+" "}else t+="  "}t+="\n"}return t}}function printABConfig({A,B}){let n="",e=0,a=0;for(;A[e][0]===1/0;)e++;for(;A[0][a]===1/0;)a++;let t=2;for(let u=0;u<A[0].length;u++)for(let a=0;a<A.length;a++){var r=Math.abs(A[a][u])===1/0?1:(""+A[a][u]).length;t=Math.max(t,r+1)}for(let m=0;m<A.length;m++){var i=m-e;for(let a=0;a<A[m].length;a++){var l=A[m][a]===1/0?"^":A[m][a]===-1/0?"v":""+A[m][a],o=t-l.length;n+=" ".repeat(o-1)+l+" "}if(0<=i){n+="  ";for(let a=0;a<B[i].length;a++)n+=B[i][a]+" "}n+="\n"}console.log(n)}function testAllEntriesOfABConfig({lambda,mu,nu,A,B,onlyUnboundedBelow=!1}){let n=0,e=0;for(;A[n][0]===1/0;)n++;for(;A[0][e]===1/0;)e++;for(let u=0;u<A.length;u++)for(let a=0;a<A.length;a++){var t,r,i,l,o;u<n&&a<e||(t=this.iterateThroughEntries({A:A,B:B,lambda:lambda,mu:mu,nu:nu,i:u,j:a}),onlyUnboundedBelow||(console.log(u,a),console.log(t)),r=u-n,i=a-e,0<=r&&0<=i&&r<nu.length&&i==nu[r]-1&&(nu[r]--,l=structuredClone(A),o=structuredClone(B),l[u][a]=-1/0,o[r][i]=Math.min(lambda[i],mu[r]),onlyUnboundedBelow&&(console.log(u,a),console.log(t)),console.log(this.iterateThroughEntries({A:l,B:o,lambda:lambda,mu:mu,nu:nu,i:u,j:a})),nu[r]++))}}function getArrayVersionOfABConfig({lambda,mu,nu,A,B}){let n=0,e=0;for(;A[n][0]===1/0;)n++;for(;A[0][e]===1/0;)e++;var t=new Array(16),r=new Array(16);for(let o=0;o<16;o++){t[o]=new Array(16),r[o]=new Array(16);for(let a=0;a<16;a++){var i=o-8+n,l=a-8+e;if(0<=i&&i<A.length&&0<=l&&l<A[i].length)t[o][a]=Math.min(Math.max(A[i][l]+8,0),16);else{const u=a-8<0?1/0:a-8>=lambda.length?0:lambda[a-8],m=o-8<0?1/0:o-8>=mu.length?0:mu[o-8];i=0<=o-8&&o-8<nu.length&&a-8<nu[o-8]||o-8<0||a-8<0?Math.min(u,m):-1/0;t[o][a]=Math.min(Math.max(i+8,0),16)}16===t[o][a]&&(t[o][a]=1/0),o<B.length&&a<B[o].length?r[o][a]=B[o][a]:r[o][a]=0}}return[t,r]}function getABConfigRegions({bigA,bigB,lambda,mu,nu}){var e=[],t=[],r=[],i=[];for(let f=0;f<bigA.length;f++)for(let n=0;n<bigA[f].length;n++)if(bigA[f][n]!==1/0){var l=f-8,o=n-8,u=0<=l&&l<nu.length&&0<=o&&o<nu[l],m=bigA[f][n],g=0<=l&&0<=o?bigB[l][o]+8:0;for(let a=0;a<Math.max(m,g);a++){var h=a-8;switch(u+(0<=o&&o<lambda.length&&0<=h&&h<lambda[o])+(0<=l&&l<mu.length&&0<=h&&h<mu[l])){case 1:e.push([f,n,a]);break;case 2:t.push([l,o,h]);break;case 3:r.push([f,n,a]),i.push([l,o,h])}}}return[e,t,r,i]}async function colorABConfigRegions({bigA,bigB,lambda,mu,nu,arrayA,arrayB}){var a=getABConfigRegions({bigA:bigA,bigB:bigB,lambda:lambda,mu:mu,nu:nu});await this.colorCubes(arrayA,a[0],.05,.5),await this.colorCubes(arrayA,a[2],.7,.6),await this.colorCubes(arrayB,a[1],.15,.6),await this.colorCubes(arrayB,a[3],.7,.6)}async function colorABConfigs({bigA,bigB,lambda,mu,nu,arrayB}){var a=getABConfigRegions({bigA:bigA,bigB:bigB,lambda:lambda,mu:mu,nu:nu});await this.colorWalls(arrayB,.69,.75),await this.colorCubes(arrayB,a[1],.69,.75),await this.colorCubes(arrayB,a[3],.69,.75)}export{isValidABConfig,getMinimalABConfig,iterateThroughEntries,printABConfig,testAllEntriesOfABConfig,getArrayVersionOfABConfig,colorABConfigRegions,colorABConfigs};