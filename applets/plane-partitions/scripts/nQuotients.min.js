import anime from"/scripts/anime.min.js";import{hsvToRgb}from"/scripts/applets/applet.min.js";import{changeOpacity}from"/scripts/src/animation.min.js";import{convertColor}from"/scripts/src/browser.min.js";async function drawBoundary(index,n){this.in2dView||await this.show2dView(),"0"!==this.wilsonNumbers.canvas.style.opacity&&await changeOpacity({element:this.wilsonNumbers.canvas,opacity:0,duration:this.animationTime/3}),this.wilsonNumbers.ctx.clearRect(0,0,this.wilsonNumbers.canvasWidth,this.wilsonNumbers.canvasHeight);const t=this.arrays[index];var i,r=t.numbers,e=[];let s=0,a=0;for(let h=t.footprint-1;0<=h;h--){for(;a<t.footprint&&r[h][a]===1/0;)h!==t.footprint-1&&r[h+1][a]===1/0||(i=s%n/n,i=hsvToRgb(i,1,1),e.push([h,a,!0,i]),s++),a++;var o=s%n/n,o=hsvToRgb(o,1,1);e.push([h,a,!1,o]),s++}for(var c;a<t.footprint;)-1!=t.footprint-1&&r[0][a]===1/0||(c=s%n/n,c=hsvToRgb(c,1,1),e.push([-1,a,!0,c]),s++),a++;return e.forEach(rect=>{this.drawBoundaryRect(t,rect[0],rect[1],rect[2],rect[3])}),await changeOpacity({element:this.wilsonNumbers.canvas,opacity:1,duration:this.animationTime/3}),this.wilsonNumbers.ctx.fillStyle=convertColor(255,255,255),e}async function drawNQuotient(index,n,m,rects){const r=this.arrays[index],i={t:1};var t=()=>{this.wilsonNumbers.ctx.clearRect(0,0,this.wilsonNumbers.canvasWidth,this.wilsonNumbers.canvasHeight),rects.forEach((rect,index)=>{var t=index%n===m?1:i.t;this.drawBoundaryRect(r,rect[0],rect[1],rect[2],[...rect[3],t])})},e=(await anime({targets:i,t:0,duration:this.animationTime,easing:"easeOutQuad",update:t,complete:t}).finished,this.wilsonNumbers.ctx.clearRect(0,0,this.wilsonNumbers.canvasWidth,this.wilsonNumbers.canvasHeight),rects.forEach((rect,index)=>{var t=index%n===m?1:0;this.drawBoundaryRect(r,rect[0],rect[1],rect[2],[...rect[3],t])}),(rects=rects.filter((rect,index)=>index%n===m)).filter(rect=>!rect[2]).length);const s=new Array(rects.length);let a=e-1,o=0;rects.forEach((rect,index)=>{s[index]=[a,o],rect[2]?o++:a--}),i.t=0,t=()=>{this.wilsonNumbers.ctx.clearRect(0,0,this.wilsonNumbers.canvasWidth,this.wilsonNumbers.canvasHeight),rects.forEach((rect,index)=>{this.drawBoundaryRect(r,(1-i.t)*rect[0]+i.t*s[index][0],(1-i.t)*rect[1]+i.t*s[index][1],rect[2],rect[3])})},await anime({targets:i,t:1,duration:this.animationTime,easing:"easeInOutQuad",update:t,complete:t}).finished,this.wilsonNumbers.ctx.clearRect(0,0,this.wilsonNumbers.canvasWidth,this.wilsonNumbers.canvasHeight),rects.forEach((rect,index)=>{this.drawBoundaryRect(r,s[index][0],s[index][1],rect[2],rect[3])});const c=[],h=(s.forEach((rect,index)=>{if(!rects[index][2])for(let i=rect[1];i<r.footprint;i++)if(r.numbers[rect[0]][i]===1/0)for(let t=0;t<this.infiniteHeight;t++)c.push([rect[0],i,t])}),this.deleteCubes(r,c,!0),[]);for(let l=r.footprint-1;l>s[0][0];l--)h.push([l,0,!1]);for(let d=s[s.length-1][1];d<r.footprint;d++)h.push([-1,d,!0]);i.t=0,t=()=>{this.wilsonNumbers.ctx.clearRect(0,0,this.wilsonNumbers.canvasWidth,this.wilsonNumbers.canvasHeight),rects.forEach((rect,index)=>{this.drawBoundaryRect(r,s[index][0],s[index][1],rect[2],rect[3])}),h.forEach(rect=>{this.drawBoundaryRect(r,rect[0],rect[1],rect[2],[...rects[0][3],i.t])})},await anime({targets:i,t:1,duration:this.animationTime/2,easing:"easeInQuad",update:t,complete:t}).finished,this.wilsonNumbers.ctx.clearRect(0,0,this.wilsonNumbers.canvasWidth,this.wilsonNumbers.canvasHeight),rects.forEach((rect,index)=>{this.drawBoundaryRect(r,s[index][0],s[index][1],rect[2],rect[3])}),h.forEach(rect=>{this.drawBoundaryRect(r,rect[0],rect[1],rect[2],rect[3])}),this.wilsonNumbers.ctx.fillStyle=convertColor(255,255,255)}function drawBoundaryRect(array,i,j,horizontal,rgba){var t=(this.totalArrayFootprint-array.footprint-1)/2,r=array.partialFootprintSum-array.footprint;this.wilsonNumbers.ctx.fillStyle=convertColor(...rgba),horizontal?this.wilsonNumbers.ctx.fillRect(this.wilsonNumbers.canvasWidth*(j+r+1)/(this.totalArrayFootprint+1),this.wilsonNumbers.canvasHeight*(i+t+1+.9375)/(this.totalArrayFootprint+1)+1,this.wilsonNumbers.canvasWidth/(this.totalArrayFootprint+1),this.wilsonNumbers.canvasHeight*(1/16)/(this.totalArrayFootprint+1)):this.wilsonNumbers.ctx.fillRect(this.wilsonNumbers.canvasWidth*(j+r+.9375)/(this.totalArrayFootprint+1),this.wilsonNumbers.canvasHeight*(i+t+1)/(this.totalArrayFootprint+1)+1,this.wilsonNumbers.canvasWidth*(1/16)/(this.totalArrayFootprint+1),this.wilsonNumbers.canvasHeight/(this.totalArrayFootprint+1))}export{drawBoundary,drawNQuotient,drawBoundaryRect};